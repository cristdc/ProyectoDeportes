import mongoose from 'mongoose';

// Primero importamos los modelos
import '../models/User.js';
import '../models/Race.js';
import '../models/Registration.js';

// Obtenemos los modelos
const User = mongoose.model('User');
const Race = mongoose.model('Race');
const Registration = mongoose.model('Registration');

// Conectar a MongoDB
try {
  await mongoose.connect('mongodb://localhost:27017/deportes', {
    useNewUrlParser: true,
    useUnifiedTopology: true
  });
  console.log('Conexión a MongoDB establecida');
} catch (error) {
  console.error('Error al conectar con MongoDB:', error);
  process.exit(1);
}

// Expanded users data (10 users total)
const expandedUsers = [
  {
    _id: new mongoose.Types.ObjectId("663f1b4667d0d8992e610c85"),
    email: "admin@example.com",
    name: "Admin Usuario",
    role: "admin",
    avatar: "default.jpg",
    age: 35,
    registrationDate: new Date("2026-01-15T10:30:00Z"),
  },
  {
    _id: new mongoose.Types.ObjectId("663f1b4667d0d8992e610c86"),
    email: "corredor@example.com",
    name: "Juan Corredor",
    role: "user",
    avatar: "default.jpg",
    age: 28,
    gender: "male",
    registrationDate: new Date("2026-02-20T14:45:00Z"),
  },
  {
    _id: new mongoose.Types.ObjectId("663f1b4667d0d8992e610c87"),
    email: "ciclista@example.com",
    name: "María Ciclista",
    role: "user",
    avatar: "default.jpg",
    age: 32,
    gender: "female",
    registrationDate: new Date("2026-03-05T09:15:00Z"),
  },
  {
    _id: new mongoose.Types.ObjectId("663f1b4667d0d8992e610c88"),
    email: "triatleta@example.com",
    name: "Carlos Triatlón",
    role: "user",
    avatar: "user4.jpg",
    age: 29,
    gender: "male",
    registrationDate: new Date("2026-02-10T08:20:00Z"),
  },
  {
    _id: new mongoose.Types.ObjectId("663f1b4667d0d8992e610c89"),
    email: "montanista@example.com",
    name: "Ana Montaña",
    role: "user",
    avatar: "user5.jpg",
    age: 31,
    gender: "female",
    registrationDate: new Date("2026-01-25T16:40:00Z"),
  },
  {
    _id: new mongoose.Types.ObjectId("663f1b4667d0d8992e610c8a"),
    email: "nadador@example.com",
    name: "Pedro Natación",
    role: "user",
    avatar: "user6.jpg",
    age: 26,
    gender: "male",
    registrationDate: new Date("2026-03-12T11:35:00Z"),
  },
  {
    _id: new mongoose.Types.ObjectId("663f1b4667d0d8992e610c8b"),
    email: "atleta@example.com",
    name: "Laura Atletismo",
    role: "user",
    avatar: "user7.jpg",
    age: 24,
    gender: "female",
    registrationDate: new Date("2026-02-28T13:50:00Z"),
  },
  {
    _id: new mongoose.Types.ObjectId("663f1b4667d0d8992e610c8c"),
    email: "crossfitter@example.com",
    name: "Miguel Crossfit",
    role: "user",
    avatar: "user8.jpg",
    age: 30,
    gender: "male",
    registrationDate: new Date("2026-01-30T15:25:00Z"),
  },
  {
    _id: new mongoose.Types.ObjectId("663f1b4667d0d8992e610c8d"),
    email: "organizador@example.com",
    name: "Elena Organizadora",
    role: "admin",
    avatar: "admin2.jpg",
    age: 38,
    gender: "female",
    registrationDate: new Date("2026-01-05T10:15:00Z"),
  },
  {
    _id: new mongoose.Types.ObjectId("663f1b4667d0d8992e610c8e"),
    email: "ultratrail@example.com",
    name: "Roberto UltraTrail",
    role: "user",
    avatar: "user10.jpg",
    age: 35,
    gender: "male",
    registrationDate: new Date("2026-03-02T09:10:00Z"),
  },
];

// Expanded races data (10 races with different statuses)
const expandedRaces = [
  {
    _id: new mongoose.Types.ObjectId("663f1b4667d0d8992e610d85"),
    name: "Maratón Urbano 2026",
    sport: "running",
    date: new Date("2026-05-15T08:00:00Z"),
    location: "Parque Central",
    distance: 42.2,
    maxParticipants: 500,
    unevenness: 150,
    tour: "ruta-maraton.gpx",
    qualifyingTime: "04:00:00",
    classification: [],
    createdBy: new mongoose.Types.ObjectId("663f1b4667d0d8992e610c85"),
    status: "open",
    createdAt: new Date("2026-01-10T11:30:00Z"),
    hasRunnersCSV: false,
    runnersCSVPath: null,
    lastCSVUpdate: null,
    hasGPXFile: true,
    gpxFilePath: "/uploads/gpx/maraton-urbano.gpx",
    gpxFileUploadedAt: new Date("2026-01-12T14:30:00Z"),
    gpxFileName: "maraton-urbano.gpx",
  },
  {
    _id: new mongoose.Types.ObjectId("663f1b4667d0d8992e610d86"),
    name: "Trail de Montaña",
    sport: "trailRunning",
    date: new Date("2026-06-22T07:30:00Z"),
    location: "Sierra Norte",
    distance: 21.5,
    maxParticipants: 300,
    unevenness: 850,
    tour: "ruta-trail.gpx",
    qualifyingTime: "03:30:00",
    classification: [],
    createdBy: new mongoose.Types.ObjectId("663f1b4667d0d8992e610c85"),
    status: "open",
    createdAt: new Date("2026-02-15T10:45:00Z"),
    hasRunnersCSV: true,
    runnersCSVPath: "/uploads/csv/trail-montana.csv",
    lastCSVUpdate: new Date("2026-02-20T16:45:00Z"),
    hasGPXFile: true,
    gpxFilePath: "/uploads/gpx/trail-montana.gpx",
    gpxFileUploadedAt: new Date("2026-02-16T11:30:00Z"),
    gpxFileName: "trail-montana.gpx",
  },
  {
    _id: new mongoose.Types.ObjectId("663f1b4667d0d8992e610d87"),
    name: "Gran Fondo Ciclista",
    sport: "cycling",
    date: new Date("2026-07-08T07:00:00Z"),
    location: "Valle del Río",
    distance: 120,
    maxParticipants: 400,
    unevenness: 1200,
    tour: "ruta-ciclista.gpx",
    qualifyingTime: "05:00:00",
    classification: [],
    createdBy: new mongoose.Types.ObjectId("663f1b4667d0d8992e610c85"),
    status: "open",
    createdAt: new Date("2026-03-10T09:20:00Z"),
    hasRunnersCSV: false,
    runnersCSVPath: null,
    lastCSVUpdate: null,
    hasGPXFile: true,
    gpxFilePath: "/uploads/gpx/gran-fondo.gpx",
    gpxFileUploadedAt: new Date("2026-03-15T10:20:00Z"),
    gpxFileName: "gran-fondo.gpx",
  },
  {
    _id: new mongoose.Types.ObjectId("663f1b4667d0d8992e610d88"),
    name: "Triatlón Ciudad 2026",
    sport: "triathlon",
    date: new Date("2026-08-05T06:30:00Z"),
    location: "Playa Marina",
    distance: 51.5,
    maxParticipants: 250,
    unevenness: 350,
    tour: "ruta-triatlon.gpx",
    qualifyingTime: "03:00:00",
    classification: [],
    createdBy: new mongoose.Types.ObjectId("663f1b4667d0d8992e610c8d"),
    status: "closed",
    createdAt: new Date("2026-02-05T13:15:00Z"),
    hasRunnersCSV: true,
    runnersCSVPath: "/uploads/csv/triatlon-ciudad.csv",
    lastCSVUpdate: new Date("2026-04-10T09:30:00Z"),
    hasGPXFile: true,
    gpxFilePath: "/uploads/gpx/triatlon-ciudad.gpx",
    gpxFileUploadedAt: new Date("2026-02-10T14:45:00Z"),
    gpxFileName: "triatlon-ciudad.gpx",
  },
  {
    _id: new mongoose.Types.ObjectId("663f1b4667d0d8992e610d89"),
    name: "Media Maratón Nocturna",
    sport: "running",
    date: new Date("2026-06-10T20:00:00Z"),
    location: "Centro Histórico",
    distance: 21.1,
    maxParticipants: 600,
    unevenness: 120,
    tour: "ruta-nocturna.gpx",
    qualifyingTime: "02:15:00",
    classification: [],
    createdBy: new mongoose.Types.ObjectId("663f1b4667d0d8992e610c85"),
    status: "completed",
    createdAt: new Date("2026-01-20T11:20:00Z"),
    hasRunnersCSV: true,
    runnersCSVPath: "/uploads/csv/media-nocturna.csv",
    lastCSVUpdate: new Date("2026-06-12T10:30:00Z"),
    hasGPXFile: true,
    gpxFilePath: "/uploads/gpx/media-nocturna.gpx",
    gpxFileUploadedAt: new Date("2026-01-25T16:15:00Z"),
    gpxFileName: "media-nocturna.gpx",
  },
  {
    _id: new mongoose.Types.ObjectId("663f1b4667d0d8992e610d8a"),
    name: "Ultra Trail 100K",
    sport: "trailRunning",
    date: new Date("2026-09-15T05:00:00Z"),
    location: "Cordillera Este",
    distance: 100,
    maxParticipants: 200,
    unevenness: 3500,
    tour: "ruta-ultra.gpx",
    qualifyingTime: "20:00:00",
    classification: [],
    createdBy: new mongoose.Types.ObjectId("663f1b4667d0d8992e610c8d"),
    status: "draft",
    createdAt: new Date("2026-03-01T15:40:00Z"),
    hasRunnersCSV: false,
    runnersCSVPath: null,
    lastCSVUpdate: null,
    hasGPXFile: false,
    gpxFilePath: null,
    gpxFileUploadedAt: null,
    gpxFileName: null,
  },
  {
    _id: new mongoose.Types.ObjectId("663f1b4667d0d8992e610d8b"),
    name: "Carrera Solidaria 10K",
    sport: "running",
    date: new Date("2026-05-30T09:00:00Z"),
    location: "Parque Metropolitano",
    distance: 10,
    maxParticipants: 1000,
    unevenness: 80,
    tour: "ruta-solidaria.gpx",
    qualifyingTime: "01:00:00",
    classification: [],
    createdBy: new mongoose.Types.ObjectId("663f1b4667d0d8992e610c85"),
    status: "cancelled",
    createdAt: new Date("2026-01-15T12:30:00Z"),
    hasRunnersCSV: true,
    runnersCSVPath: "/uploads/csv/carrera-solidaria.csv",
    lastCSVUpdate: new Date("2026-04-20T11:45:00Z"),
    hasGPXFile: true,
    gpxFilePath: "/uploads/gpx/carrera-solidaria.gpx",
    gpxFileUploadedAt: new Date("2026-01-20T14:20:00Z"),
    gpxFileName: "carrera-solidaria.gpx",
  },
  {
    _id: new mongoose.Types.ObjectId("663f1b4667d0d8992e610d8c"),
    name: "Duatlón Urbano",
    sport: "duathlon",
    date: new Date("2026-07-25T08:30:00Z"),
    location: "Circuito Oeste",
    distance: 25.5,
    maxParticipants: 300,
    unevenness: 220,
    tour: "ruta-duatlon.gpx",
    qualifyingTime: "02:30:00",
    classification: [],
    createdBy: new mongoose.Types.ObjectId("663f1b4667d0d8992e610c8d"),
    status: "postponed",
    createdAt: new Date("2026-02-10T10:15:00Z"),
    hasRunnersCSV: false,
    runnersCSVPath: null,
    lastCSVUpdate: null,
    hasGPXFile: true,
    gpxFilePath: "/uploads/gpx/duatlon-urbano.gpx",
    gpxFileUploadedAt: new Date("2026-02-15T11:40:00Z"),
    gpxFileName: "duatlon-urbano.gpx",
  },
  {
    _id: new mongoose.Types.ObjectId("663f1b4667d0d8992e610d8d"),
    name: "Maratón de Montaña",
    sport: "trailRunning",
    date: new Date("2026-08-20T06:00:00Z"),
    location: "Parque Nacional",
    distance: 42.2,
    maxParticipants: 350,
    unevenness: 1800,
    tour: "ruta-maraton-montana.gpx",
    qualifyingTime: "06:00:00",
    classification: [],
    createdBy: new mongoose.Types.ObjectId("663f1b4667d0d8992e610c85"),
    status: "upcoming",
    createdAt: new Date("2026-03-05T14:30:00Z"),
    hasRunnersCSV: true,
    runnersCSVPath: "/uploads/csv/maraton-montana.csv",
    lastCSVUpdate: new Date("2026-05-15T13:20:00Z"),
    hasGPXFile: true,
    gpxFilePath: "/uploads/gpx/maraton-montana.gpx",
    gpxFileUploadedAt: new Date("2026-03-10T15:45:00Z"),
    gpxFileName: "maraton-montana.gpx",
  },
  {
    _id: new mongoose.Types.ObjectId("663f1b4667d0d8992e610d8e"),
    name: "Cronoescalada Ciclista",
    sport: "cycling",
    date: new Date("2026-06-05T09:30:00Z"),
    location: "Puerto de Montaña",
    distance: 15,
    maxParticipants: 150,
    unevenness: 950,
    tour: "ruta-cronoescalada.gpx",
    qualifyingTime: "01:30:00",
    classification: [],
    createdBy: new mongoose.Types.ObjectId("663f1b4667d0d8992e610c8d"),
    status: "registration_closed",
    createdAt: new Date("2026-02-01T11:10:00Z"),
    hasRunnersCSV: true,
    runnersCSVPath: "/uploads/csv/cronoescalada.csv",
    lastCSVUpdate: new Date("2026-05-20T10:15:00Z"),
    hasGPXFile: true,
    gpxFilePath: "/uploads/gpx/cronoescalada.gpx",
    gpxFileUploadedAt: new Date("2026-02-05T12:20:00Z"),
    gpxFileName: "cronoescalada.gpx",
  },
];

// Expanded registrations data (more registrations for different races)
const expandedRegistrations = [
  // Original registrations
  {
    _id: new mongoose.Types.ObjectId("663f1b4667d0d8992e610e85"),
    race: new mongoose.Types.ObjectId("663f1b4667d0d8992e610d85"),
    user: new mongoose.Types.ObjectId("663f1b4667d0d8992e610c86"),
    dorsal: 101,
    registeredAt: new Date("2026-03-15T14:30:00Z"),
    status: "registered",
    time: null,
    position: null,
    hasUserGpx: false,
    userGpxPath: null,
    userGpxUploadedAt: null,
    userGpxFileName: null,
    userGpxData: {
      totalDistance: null,
      elevationGain: null,
      elevationLoss: null,
      movingTime: null,
      totalTime: null,
      avgSpeed: null,
      maxSpeed: null,
    },
  },
  {
    _id: new mongoose.Types.ObjectId("663f1b4667d0d8992e610e86"),
    race: new mongoose.Types.ObjectId("663f1b4667d0d8992e610d86"),
    user: new mongoose.Types.ObjectId("663f1b4667d0d8992e610c86"),
    dorsal: 202,
    registeredAt: new Date("2026-03-16T10:45:00Z"),
    status: "registered",
    time: null,
    position: null,
    hasUserGpx: false,
    userGpxPath: null,
    userGpxUploadedAt: null,
    userGpxFileName: null,
    userGpxData: {
      totalDistance: null,
      elevationGain: null,
      elevationLoss: null,
      movingTime: null,
      totalTime: null,
      avgSpeed: null,
      maxSpeed: null,
    },
  },
  {
    _id: new mongoose.Types.ObjectId("663f1b4667d0d8992e610e87"),
    race: new mongoose.Types.ObjectId("663f1b4667d0d8992e610d87"),
    user: new mongoose.Types.ObjectId("663f1b4667d0d8992e610c87"),
    dorsal: 303,
    registeredAt: new Date("2026-03-20T11:15:00Z"),
    status: "registered",
    time: null,
    position: null,
    hasUserGpx: false,
    userGpxPath: null,
    userGpxUploadedAt: null,
    userGpxFileName: null,
    userGpxData: {
      totalDistance: null,
      elevationGain: null,
      elevationLoss: null,
      movingTime: null,
      totalTime: null,
      avgSpeed: null,
      maxSpeed: null,
    },
  },
  // Additional registrations
  {
    _id: new mongoose.Types.ObjectId("663f1b4667d0d8992e610e88"),
    race: new mongoose.Types.ObjectId("663f1b4667d0d8992e610d88"),
    user: new mongoose.Types.ObjectId("663f1b4667d0d8992e610c88"),
    dorsal: 123,
    registeredAt: new Date("2026-03-25T09:20:00Z"),
    status: "confirmed",
    time: null,
    position: null,
    hasUserGpx: false,
    userGpxPath: null,
    userGpxUploadedAt: null,
    userGpxFileName: null,
    userGpxData: {
      totalDistance: null,
      elevationGain: null,
      elevationLoss: null,
      movingTime: null,
      totalTime: null,
      avgSpeed: null,
      maxSpeed: null,
    },
  },
  {
    _id: new mongoose.Types.ObjectId("663f1b4667d0d8992e610e89"),
    race: new mongoose.Types.ObjectId("663f1b4667d0d8992e610d85"),
    user: new mongoose.Types.ObjectId("663f1b4667d0d8992e610c89"),
    dorsal: 102,
    registeredAt: new Date("2026-03-18T13:45:00Z"),
    status: "registered",
    time: null,
    position: null,
    hasUserGpx: false,
    userGpxPath: null,
    userGpxUploadedAt: null,
    userGpxFileName: null,
    userGpxData: {
      totalDistance: null,
      elevationGain: null,
      elevationLoss: null,
      movingTime: null,
      totalTime: null,
      avgSpeed: null,
      maxSpeed: null,
    },
  },
  {
    _id: new mongoose.Types.ObjectId("663f1b4667d0d8992e610e8a"),
    race: new mongoose.Types.ObjectId("663f1b4667d0d8992e610d89"),
    user: new mongoose.Types.ObjectId("663f1b4667d0d8992e610c8a"),
    dorsal: 201,
    registeredAt: new Date("2026-03-10T10:30:00Z"),
    status: "completed",
    time: "01:45:32",
    position: 5,
    hasUserGpx: true,
    userGpxPath: "/uploads/user-gpx/nocturna-pedro.gpx",
    userGpxUploadedAt: new Date("2026-06-11T10:15:00Z"),
    userGpxFileName: "nocturna-pedro.gpx",
    userGpxData: {
      totalDistance: 21.3,
      elevationGain: 124,
      elevationLoss: 124,
      movingTime: "01:45:32",
      totalTime: "01:47:20",
      avgSpeed: 12.1,
      maxSpeed: 16.5,
    },
  },
  {
    _id: new mongoose.Types.ObjectId("663f1b4667d0d8992e610e8b"),
    race: new mongoose.Types.ObjectId("663f1b4667d0d8992e610d89"),
    user: new mongoose.Types.ObjectId("663f1b4667d0d8992e610c8b"),
    dorsal: 202,
    registeredAt: new Date("2026-03-12T14:25:00Z"),
    status: "completed",
    time: "01:38:45",
    position: 3,
    hasUserGpx: true,
    userGpxPath: "/uploads/user-gpx/nocturna-laura.gpx",
    userGpxUploadedAt: new Date("2026-06-11T09:45:00Z"),
    userGpxFileName: "nocturna-laura.gpx",
    userGpxData: {
      totalDistance: 21.2,
      elevationGain: 122,
      elevationLoss: 122,
      movingTime: "01:38:45",
      totalTime: "01:40:10",
      avgSpeed: 12.9,
      maxSpeed: 17.2,
    },
  },
  {
    _id: new mongoose.Types.ObjectId("663f1b4667d0d8992e610e8c"),
    race: new mongoose.Types.ObjectId("663f1b4667d0d8992e610d8a"),
    user: new mongoose.Types.ObjectId("663f1b4667d0d8992e610c8c"),
    dorsal: 50,
    registeredAt: new Date("2026-04-05T11:20:00Z"),
    status: "waiting_list",
    time: null,
    position: null,
    hasUserGpx: false,
    userGpxPath: null,
    userGpxUploadedAt: null,
    userGpxFileName: null,
    userGpxData: {
      totalDistance: null,
      elevationGain: null,
      elevationLoss: null,
      movingTime: null,
      totalTime: null,
      avgSpeed: null,
      maxSpeed: null,
    },
  },
  {
    _id: new mongoose.Types.ObjectId("663f1b4667d0d8992e610e8d"),
    race: new mongoose.Types.ObjectId("663f1b4667d0d8992e610d8c"),
    user: new mongoose.Types.ObjectId("663f1b4667d0d8992e610c8d"),
    dorsal: 75,
    registeredAt: new Date("2026-04-10T09:35:00Z"),
    status: "cancelled",
    time: null,
    position: null,
    hasUserGpx: false,
    userGpxPath: null,
    userGpxUploadedAt: null,
    userGpxFileName: null,
    userGpxData: {
      totalDistance: null,
      elevationGain: null,
      elevationLoss: null,
      movingTime: null,
      totalTime: null,
      avgSpeed: null,
      maxSpeed: null,
    },
  },
  {
    _id: new mongoose.Types.ObjectId("663f1b4667d0d8992e610e8e"),
    race: new mongoose.Types.ObjectId("663f1b4667d0d8992e610d8e"),
    user: new mongoose.Types.ObjectId("663f1b4667d0d8992e610c8e"),
    dorsal: 42,
    registeredAt: new Date("2026-04-15T14:40:00Z"),
    status: "paid",
    time: null,
    position: null,
    hasUserGpx: false,
    userGpxPath: null,
    userGpxUploadedAt: null,
    userGpxFileName: null,
    userGpxData: {
      totalDistance: null,
      elevationGain: null,
      elevationLoss: null,
      movingTime: null,
      totalTime: null,
      avgSpeed: null,
      maxSpeed: null,
    },
  },
  {
    _id: new mongoose.Types.ObjectId("663f1b4667d0d8992e610e8f"),
    race: new mongoose.Types.ObjectId("663f1b4667d0d8992e610d8d"),
    user: new mongoose.Types.ObjectId("663f1b4667d0d8992e610c87"),
    dorsal: 150,
    registeredAt: new Date("2026-04-20T10:15:00Z"),
    status: "confirmed",
    time: null,
    position: null,
    hasUserGpx: false,
    userGpxPath: null,
    userGpxUploadedAt: null,
    userGpxFileName: null,
    userGpxData: {
      totalDistance: null,
      elevationGain: null,
      elevationLoss: null,
      movingTime: null,
      totalTime: null,
      avgSpeed: null,
      maxSpeed: null,
    },
  },
  {
    _id: new mongoose.Types.ObjectId("663f1b4667d0d8992e610e90"),
    race: new mongoose.Types.ObjectId("663f1b4667d0d8992e610d87"),
    user: new mongoose.Types.ObjectId("663f1b4667d0d8992e610c89"),
    dorsal: 304,
    registeredAt: new Date("2026-04-02T15:30:00Z"),
    status: "registered",
    time: null,
    position: null,
    hasUserGpx: false,
    userGpxPath: null,
    userGpxUploadedAt: null,
    userGpxFileName: null,
    userGpxData: {
      totalDistance: null,
      elevationGain: null,
      elevationLoss: null,
      movingTime: null,
      totalTime: null,
      avgSpeed: null,
      maxSpeed: null,
    },
  },
];

// Example of usage in your code
const expandedData = {
  users: expandedUsers,
  races: expandedRaces,
  registrations: expandedRegistrations,
};

// Then update your seedDatabase function to use expandedData instead of exampleData

// Función para poblar la base de datos
async function seedDatabase() {
  try {
    // Primero limpiamos las colecciones existentes
    await User.deleteMany({});
    await Race.deleteMany({});
    await Registration.deleteMany({});
    
    console.log('Colecciones limpiadas');

    // Insertamos los nuevos datos
    await User.insertMany(expandedUsers);
    console.log('Usuarios insertados');

    await Race.insertMany(expandedRaces);
    console.log('Carreras insertadas');

    await Registration.insertMany(expandedRegistrations);
    console.log('Inscripciones insertadas');

    console.log('Base de datos poblada exitosamente');
    
    // Cerramos la conexión
    await mongoose.connection.close();
    process.exit(0);
  } catch (error) {
    console.error('Error al poblar la base de datos:', error);
    await mongoose.connection.close();
    process.exit(1);
  }
}

// Ejecutamos la función
seedDatabase();
