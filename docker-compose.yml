services:
  mongodb:
    image: mongo:4.4
    container_name: my-mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGO_INITDB_DATABASE}
    command: mongod --bind_ip_all
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    networks:
      - deportes_network

  app:
    build: ./Backend
    container_name: node_app
    depends_on:
      - mongodb
    environment:
      MONGODB_URI: mongodb://${MONGO_INITDB_ROOT_USERNAME}:${MONGO_INITDB_ROOT_PASSWORD}@mongodb:27017/${MONGO_INITDB_DATABASE}?authSource=admin
      JWT_SECRET: ${JWT_SECRET}
      FRONTEND_URL: alb-deportes-332363768.us-east-1.elb.amazonaws.com
      COOKIE_SECURE: "false"
      NODE_ENV: development
    volumes:
      - ./Backend:/app
      - /app/node_modules
      - ./Backend/uploads:/app/uploads
      - ./Backend/uploads/EXE:/app/uploads/EXE
      - ./Backend/uploads/Downloads:/app/uploads/Downloads
    ports:
      - "3000:3000"
    networks:
      - deportes_network

  frontend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: frontend
    depends_on:
      - app
    ports:
      - "80:80"
    networks:
      - deportes_network

  mongo-express:
    image: mongo-express
    container_name: mongo-express
    restart: always
    depends_on:
      - mongodb
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
      ME_CONFIG_MONGODB_URL: mongodb://${MONGO_INITDB_ROOT_USERNAME}:${MONGO_INITDB_ROOT_PASSWORD}@mongodb:27017/
    networks:
      - deportes_network

networks:
  deportes_network:
    driver: bridge

volumes:
  mongo_data:
